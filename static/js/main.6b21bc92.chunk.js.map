{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/UI/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","item","id","ExpenseFilter","value","selected","onChange","ev","onSelectedYear","target","ChartBar","barFillHeight","maxValue","Math","round","console","log","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setfilteredYear","filteredExpenses","filter","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","toString","onAddExpense","DEMO_EXPENSES","App","setExpenses","savedExpense","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b21bc92.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        < div className=\"expense-date\" >\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-day\">{day}</div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\nconst Card = props => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n};\r\n\r\nexport default Card;","import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ExpenseItem;","import ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\r\n    };\r\n\r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map(item =>\r\n        (<ExpenseItem\r\n            key={item.id}\r\n            title={item.title}\r\n            amount={item.amount}\r\n            date={item.date}\r\n        />))}\r\n    </ul>\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = (props) => {\r\n\r\n    const expenseFilterHandler = (ev) => {\r\n        props.onSelectedYear(ev.target.value);\r\n    };\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={expenseFilterHandler}>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseFilter;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n        console.log('barFillHeight: ', barFillHeight)\r\n    };\r\n\r\n    return <div className='chart-bar'>\r\n        <div className='chart-bar__inner'>\r\n            <div className='chart-bar__fill' style={{ height: barFillHeight }}>\r\n            </div>\r\n        </div>\r\n        <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return <div className='chart'>\r\n        {props.dataPoints.map(dataPoint =>\r\n            <ChartBar\r\n                key={dataPoint.label}\r\n                value={dataPoint.value}\r\n                maxValue={totalMaximum}\r\n                label={dataPoint.label}\r\n            />)}\r\n    </div>\r\n};\r\n\r\nexport default Chart;","import Chart from '../Chart/Chart';\r\nimport ExpenseFilter from '../UI/ExpenseFilter';\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); //starting at 0 \r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    };\r\n\r\n    return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpenseFilter from '../UI/ExpenseFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = props => {\r\n  const [filteredYear, setfilteredYear] = useState('2021');\r\n\r\n  const filterByYearHandler = (selectedYear) => {\r\n    setfilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter(item => item.date.getFullYear() === +filteredYear);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter selected={filteredYear} onSelectedYear={filterByYearHandler} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (ev) => {\r\n        setEnteredTitle(ev.target.value)\r\n    };\r\n\r\n    const amountChangeHandler = (ev) => {\r\n        setEnteredAmount(ev.target.value)\r\n    };\r\n\r\n    const dateChangeHandler = (ev) => {\r\n        setEnteredDate(ev.target.value)\r\n    };\r\n\r\n    const submitHandler = (ev) => {\r\n        ev.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate),\r\n        }\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type='number' min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type='date' min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button type=\"button\" onClick={props.onCancel} >Cancel</button>\r\n            <button type='submit'>Add Expense</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString(),\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false)\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true)\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false)\r\n    };\r\n\r\n    return <div className=\"new-expense\">\r\n        {!isEditing && <button onClick={startEditingHandler} >Add New Expense</button>}\r\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n    </div>;\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DEMO_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Food order',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New board',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DEMO_EXPENSES);\n\n  const addExpenseHandler = (savedExpense) => {\n    setExpenses((prevExpenses) => {\n      return [savedExpense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}